<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[夜阳's Blog]]></title>
  <subtitle><![CDATA[记录点滴　|　仰望星空，脚踏实地]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://jakezy.com//"/>
  <updated>2015-08-01T03:11:10.000Z</updated>
  <id>http://jakezy.com//</id>
  
  <author>
    <name><![CDATA[Jake Z]]></name>
    <email><![CDATA[zyseap@gmail.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 ]]></title>
    <link href="http://jakezy.com/2015/08/01/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-10/"/>
    <id>http://jakezy.com/2015/08/01/Leetcode刷题记录-10/</id>
    <published>2015-08-01T03:10:39.000Z</published>
    <updated>2015-08-01T03:11:10.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href=""></a></li>
<li><a href=""></a></li>
<li><a href=""></a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id=""><a href=""></a></h2><p>思路：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="-1"><a href=""></a></h2><p>思路：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="-2"><a href=""></a></h2><p>思路：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href=""></a></li>
<li><a href=""></a></li>
<li><a href=""></a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 9]]></title>
    <link href="http://jakezy.com/2015/07/30/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-9/"/>
    <id>http://jakezy.com/2015/07/30/Leetcode刷题记录-9/</id>
    <published>2015-07-30T08:15:58.000Z</published>
    <updated>2015-07-30T17:03:40.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="external">Delete Node in a Linked List</a></li>
<li><a href="https://leetcode.com/problems/palindrome-linked-list/" target="_blank" rel="external">Palindrome Linked List</a></li>
<li><a href="https://leetcode.com/problems/intersection-of-two-linked-lists/" target="_blank" rel="external">Intersection of Two Linked Lists</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Delete_Node_in_a_Linked_List"><a href="https://leetcode.com/problems/delete-node-in-a-linked-list/" target="_blank" rel="external">Delete Node in a Linked List</a></h2><p>思路：</p>
<p>交换两前后结点，删除后一结点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteNode</span><span class="params">(ListNode node)</span> </span>&#123;</span><br><span class="line">        node.val = node.next.val;</span><br><span class="line">        node.next = node.next.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Palindrome_Linked_List"><a href="https://leetcode.com/problems/palindrome-linked-list/" target="_blank" rel="external">Palindrome Linked List</a></h2><p>思路：</p>
<ol>
<li>找链表的中间结点，切成两条链表（head, tail）</li>
<li>挨个比较head和tail是否一致</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">findMiddle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummy.next = head;</span><br><span class="line">        ListNode fast = dummy;</span><br><span class="line">        ListNode slow = dummy;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverse</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode newHead = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode temp = head.next;</span><br><span class="line">            head.next = newHead;</span><br><span class="line">            newHead = head;</span><br><span class="line">            head = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newHead;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        ListNode middle = findMiddle(head);</span><br><span class="line">        ListNode tail = middle.next;</span><br><span class="line">        middle.next = <span class="keyword">null</span>;</span><br><span class="line">        tail = reverse(tail);</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span> &amp;&amp; tail != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (head.val != tail.val) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            head = head.next;</span><br><span class="line">            tail = tail.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Intersection_of_Two_Linked_Lists"><a href="https://leetcode.com/problems/intersection-of-two-linked-lists/" target="_blank" rel="external">Intersection of Two Linked Lists</a></h2><p>思路：</p>
<ol>
<li>求两链表长度，长度差为n</li>
<li>长的链表先走n步</li>
<li>同时遍历两链表，第一个相同的结点即为两链表交点</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123;</span><br><span class="line"> *         val = x;</span><br><span class="line"> *         next = null;</span><br><span class="line"> *     &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">getIntersectionNode</span><span class="params">(ListNode headA, ListNode headB)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> lenA = <span class="number">0</span>, lenB = <span class="number">0</span>;</span><br><span class="line">        ListNode p = headA;</span><br><span class="line">        ListNode q = headB;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (p != <span class="keyword">null</span>) &#123;</span><br><span class="line">            p = p.next;</span><br><span class="line">            lenA++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (q != <span class="keyword">null</span>) &#123;</span><br><span class="line">            q = q.next;</span><br><span class="line">            lenB++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = lenA - lenB;</span><br><span class="line">        p = n &gt; <span class="number">0</span> ? headA : headB;</span><br><span class="line">        q = n &gt; <span class="number">0</span> ? headB : headA;</span><br><span class="line">        n = n &gt; <span class="number">0</span> ? n : -n;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (p != q) &#123;</span><br><span class="line">            p = p.next;</span><br><span class="line">            q = q.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/delete-node-in-a-linked-list/">Delete Node in a Linked List</a></li>
<li><a href="https://leetcode.com/problems/palindrome-linked-list/">Palindrome Linked List</a></li>
<li><a href="https://leetcode.com/problems/intersection-of-two-linked-lists/">Intersection of Two Linked Lists</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 8]]></title>
    <link href="http://jakezy.com/2015/07/29/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-8/"/>
    <id>http://jakezy.com/2015/07/29/Leetcode刷题记录-8/</id>
    <published>2015-07-28T17:54:58.000Z</published>
    <updated>2015-07-30T17:00:16.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/partition-list/" target="_blank" rel="external">Partition List</a></li>
<li><a href="https://leetcode.com/problems/reorder-list/" target="_blank" rel="external">Reorder List</a></li>
<li><a href="https://leetcode.com/problems/remove-linked-list-elements/" target="_blank" rel="external">Remove Linked List Elements</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Partition_List"><a href="https://leetcode.com/problems/partition-list/" target="_blank" rel="external">Partition List</a></h2><p>思路：</p>
<p>维护两个链表，遍历原链表，小于x的接入第一个链表，不小于x的接入第二个链表，再合并两链表</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">partition</span><span class="params">(ListNode head, <span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        ListNode newHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode p = newHead;</span><br><span class="line">        ListNode q = dummy;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (head.val &lt; x) &#123;</span><br><span class="line">                p.next = head;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                q.next = head;</span><br><span class="line">                q = q.next;</span><br><span class="line">            &#125;</span><br><span class="line">            head = head.next;</span><br><span class="line">        &#125;</span><br><span class="line">        p.next = dummy.next;</span><br><span class="line">        q.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">return</span> newHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Reorder_List"><a href="https://leetcode.com/problems/reorder-list/" target="_blank" rel="external">Reorder List</a></h2><p>思路：</p>
<p>分成三步：</p>
<ol>
<li>找链表的中间结点，切成两条链表（head, tail）</li>
<li>反转链表tail</li>
<li>合并链表head和tail，合并条件：奇数为head，偶数为tail</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">findMiddle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode dummy = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummy.next = head;</span><br><span class="line">        ListNode fast = dummy;</span><br><span class="line">        ListNode slow = dummy;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> slow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverse</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode newHead = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ListNode temp = head.next;</span><br><span class="line">            head.next = newHead;</span><br><span class="line">            newHead = head;</span><br><span class="line">            head = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newHead;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(ListNode head, ListNode tail)</span> </span>&#123;</span><br><span class="line">        ListNode newHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode p = newHead;</span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="keyword">null</span> &amp;&amp; tail != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                p.next = head;</span><br><span class="line">                head = head.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p.next = tail;</span><br><span class="line">                tail = tail.next;</span><br><span class="line">            &#125;</span><br><span class="line">            p = p.next;</span><br><span class="line">            n++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            p.next = head;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            p.next = tail;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reorderList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode middle = findMiddle(head);</span><br><span class="line">        ListNode tail = middle.next;</span><br><span class="line">        middle.next = <span class="keyword">null</span>;</span><br><span class="line">        tail = reverse(tail);</span><br><span class="line">        merge(head, tail);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Remove_Linked_List_Elements"><a href="https://leetcode.com/problems/remove-linked-list-elements/" target="_blank" rel="external">Remove Linked List Elements</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        ListNode dummyHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummyHead.next = head;</span><br><span class="line">        ListNode p = dummyHead;</span><br><span class="line">        <span class="keyword">while</span> (p.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.next.val == val) &#123;</span><br><span class="line">                p.next = p.next.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/partition-list/">Partition List</a></li>
<li><a href="https://leetcode.com/problems/reorder-list/">Reorder List</a></li>
<li><a href="https://leetcode.com/problems/remove-linked-list-elements/">Remove Linked List Elements</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 7]]></title>
    <link href="http://jakezy.com/2015/07/28/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-7/"/>
    <id>http://jakezy.com/2015/07/28/Leetcode刷题记录-7/</id>
    <published>2015-07-28T04:51:53.000Z</published>
    <updated>2015-07-29T17:23:46.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/palindrome-partitioning-ii/" target="_blank" rel="external">Palindrome Partitioning II</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/" target="_blank" rel="external">Remove Duplicates from Sorted List</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/" target="_blank" rel="external">Remove Duplicates from Sorted List II</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Palindrome_Partitioning_II"><a href="https://leetcode.com/problems/palindrome-partitioning-ii/" target="_blank" rel="external">Palindrome Partitioning II</a></h2><p>思路：</p>
<p>state: cut[j]表示子串s[0…j]所需要的最小分割次数，isPalindrome[i][j]表示字符串s的子串s[i…j]是否为回文串</p>
<p>function: </p>
<p>initialize: cut[j] = j</p>
<p>answer: cut[j-1]</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minCut</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = s.length();</span><br><span class="line">        <span class="keyword">int</span>[] cut = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">boolean</span>[][] isPalindrome = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            cut[j] = j;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= j; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(i) == s.charAt(j)</span><br><span class="line">                        &amp;&amp; (j - i &lt;= <span class="number">1</span> || isPalindrome[i + <span class="number">1</span>][j - <span class="number">1</span>])) &#123;</span><br><span class="line">                    isPalindrome[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">if</span> (i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        cut[j] = Math.min(cut[j], cut[i - <span class="number">1</span>] + <span class="number">1</span>);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        cut[j] = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cut[n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Remove_Duplicates_from_Sorted_List"><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/" target="_blank" rel="external">Remove Duplicates from Sorted List</a></h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode p = head;</span><br><span class="line">        <span class="keyword">while</span> (p != <span class="keyword">null</span> &amp;&amp; p.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p.val == p.next.val) &#123;</span><br><span class="line">                p.next = p.next.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Remove_Duplicates_from_Sorted_List_II"><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/" target="_blank" rel="external">Remove Duplicates from Sorted List II</a></h2><p>思路：</p>
<p>引入虚节点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode dummyHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        dummyHead.next = head;</span><br><span class="line">        ListNode p = dummyHead;</span><br><span class="line">        <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> val = p.next.val;</span><br><span class="line">            <span class="keyword">if</span> (p.next.val == p.next.next.val) &#123;</span><br><span class="line">                p.next = p.next.next.next;</span><br><span class="line">                <span class="keyword">while</span> (p.next != <span class="keyword">null</span> &amp;&amp; p.next.val == val) &#123;</span><br><span class="line">                    p.next = p.next.next;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p = p.next;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/palindrome-partitioning-ii/">Palindrome Partitioning II</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/">Remove Duplicates from Sorted List</a></li>
<li><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/">Remove Duplicates from Sorted List II</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 6]]></title>
    <link href="http://jakezy.com/2015/07/27/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-6/"/>
    <id>http://jakezy.com/2015/07/27/Leetcode刷题记录-6/</id>
    <published>2015-07-27T04:46:51.000Z</published>
    <updated>2015-07-29T07:32:07.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/minimum-path-sum/" target="_blank" rel="external">Minimum Path Sum</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="external">Climbing Stairs</a></li>
<li><a href="https://leetcode.com/problems/jump-game/" target="_blank" rel="external">Jump Game</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Minimum_Path_Sum"><a href="https://leetcode.com/problems/minimum-path-sum/" target="_blank" rel="external">Minimum Path Sum</a></h2><p>思路：</p>
<p>state: f[i][j]表示从起点到i,j的最短路径和</p>
<p>function: f[i][j] = min(f[i-1][j], f[i][j-1]) + cost[i][j]</p>
<p>initialize: f[0][0] = cost[0][0], f[0][i] = cost[0][i] + f[0][i-1], f[i][0] = cost[i][0] + f[i-1][0]</p>
<p>answer: f[m-1][n-1]</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = grid.length;</span><br><span class="line">        <span class="keyword">int</span> n = grid[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] sum = <span class="keyword">new</span> <span class="keyword">int</span>[m][n];</span><br><span class="line"></span><br><span class="line">        sum[<span class="number">0</span>][<span class="number">0</span>] = grid[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            sum[<span class="number">0</span>][i] = grid[<span class="number">0</span>][i] + sum[<span class="number">0</span>][i - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            sum[i][<span class="number">0</span>] = grid[i][<span class="number">0</span>] + sum[i - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                sum[i][j] = grid[i][j] + Math.min(sum[i - <span class="number">1</span>][j], sum[i][j - <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Climbing_Stairs"><a href="https://leetcode.com/problems/climbing-stairs/" target="_blank" rel="external">Climbing Stairs</a></h2><p>思路：</p>
<p>state: f[i]表示前i个位置跳到i的方案数</p>
<p>function: f[i] = f[i-1] + f[i-2]</p>
<p>initialize: f[0] = 1, f[1] = 2</p>
<p>answer: f[n-1]</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> second = <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> first;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">return</span> second;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">            result = first + second;</span><br><span class="line">            first = second;</span><br><span class="line">            second = result;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Jump_Game"><a href="https://leetcode.com/problems/jump-game/" target="_blank" rel="external">Jump Game</a></h2><p>思路：</p>
<p>state: f[i]表示前i个位置能否跳到第i个位置</p>
<p>function: f[i] = OR(f[j], 0 &lt; j &lt; i &amp;&amp; j能跳到i)</p>
<p>initialize: f[0] = true</p>
<p>answer: f[n-1]</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Dynamic Programming</span></span><br><span class="line">    <span class="comment">// 注：在Leetcode运行会超时</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canJump</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = nums.length;</span><br><span class="line">        <span class="keyword">boolean</span>[] result = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        result[<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (result[j] &amp;&amp; nums[j] + j &gt;= i) &#123;</span><br><span class="line">                    result[i] = <span class="keyword">true</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result[n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/minimum-path-sum/">Minimum Path Sum</a></li>
<li><a href="https://leetcode.com/problems/climbing-stairs/">Climbing Stairs</a></li>
<li><a href="https://leetcode.com/problems/jump-game/">Jump Game</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 5]]></title>
    <link href="http://jakezy.com/2015/07/26/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-5/"/>
    <id>http://jakezy.com/2015/07/26/Leetcode刷题记录-5/</id>
    <published>2015-07-26T10:03:04.000Z</published>
    <updated>2015-07-29T17:51:53.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/triangle/" target="_blank" rel="external">Triangle</a></li>
<li><a href="https://leetcode.com/problems/unique-paths/" target="_blank" rel="external">Unique Paths</a></li>
<li><a href="https://leetcode.com/problems/unique-paths-ii/" target="_blank" rel="external">Unique Paths II</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Triangle"><a href="https://leetcode.com/problems/triangle/" target="_blank" rel="external">Triangle</a></h2><p>思路：</p>
<p>state: f[i][j]表示从i,j出发到最后一层的最小路径和</p>
<p>function: f[i][j] = min(f[i+1][j], f[i+1][j+1]) + triangle[i][j]</p>
<p>initialize: f[n-1][j] = triangle[n-1][j]</p>
<p>answer: f[0][0]</p>
<p>可省去f[i][j]第一维空间</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minimumTotal</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; triangle)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = triangle.size();</span><br><span class="line">        <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化终点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            sum[i] = triangle.get(n - <span class="number">1</span>).get(i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 自底向上递推，更新sum[]</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                sum[j] = triangle.get(i).get(j) + Math.min(sum[j], sum[j + <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sum[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Unique_Paths"><a href="https://leetcode.com/problems/unique-paths/" target="_blank" rel="external">Unique Paths</a></h2><p>思路：</p>
<p>state: f[i][j]表示从起点到i,j的路径数</p>
<p>function: f[i][j] = f[i-1][j] + f[i][j-1]</p>
<p>initialize: f[0][i] = 1, f[j][0] = 1</p>
<p>answer: f[m-1][n-1]</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[][] grid = <span class="keyword">new</span> <span class="keyword">int</span>[m][n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            grid[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            grid[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                grid[i][j] = grid[i - <span class="number">1</span>][j] + grid[i][j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> grid[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Unique_Paths_II"><a href="https://leetcode.com/problems/unique-paths-ii/" target="_blank" rel="external">Unique Paths II</a></h2><p>思路：</p>
<p>state: f[i][j]表示从起点到i,j的路径数</p>
<p>function: f[i][j] = f[i-1][j] + f[i][j-1]</p>
<p>initialize: f[0][i] = 1, f[j][0] = 1</p>
<p>answer: f[m-1][n-1]</p>
<p>obstacleGrid[i][j]为1时表示路径不通，则grid[i][j] = 0</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">uniquePathsWithObstacles</span><span class="params">(<span class="keyword">int</span>[][] obstacleGrid)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> m = obstacleGrid.length;</span><br><span class="line">        <span class="keyword">int</span> n = obstacleGrid[<span class="number">0</span>].length;</span><br><span class="line">        <span class="keyword">int</span>[][] grid = <span class="keyword">new</span> <span class="keyword">int</span>[m][n];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obstacleGrid[i][<span class="number">0</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            grid[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (obstacleGrid[<span class="number">0</span>][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            grid[<span class="number">0</span>][j] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (obstacleGrid[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                    grid[i][j] = <span class="number">0</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    grid[i][j] = grid[i - <span class="number">1</span>][j] + grid[i][j - <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> grid[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/triangle/">Triangle</a></li>
<li><a href="https://leetcode.com/problems/unique-paths/">Unique Paths</a></li>
<li><a href="https://leetcode.com/problems/unique-paths-ii/">Unique Paths II</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 4]]></title>
    <link href="http://jakezy.com/2015/07/25/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-4/"/>
    <id>http://jakezy.com/2015/07/25/Leetcode刷题记录-4/</id>
    <published>2015-07-25T11:28:45.000Z</published>
    <updated>2015-07-29T17:51:24.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/reverse-linked-list/" target="_blank" rel="external">Reverse Linked List</a></li>
<li><a href="https://leetcode.com/problems/reverse-linked-list-ii/" target="_blank" rel="external">Reverse Linked List II</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle/" target="_blank" rel="external">Linked List Cycle</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle-ii/" target="_blank" rel="external">Linked List Cycle II</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Reverse_Linked_List"><a href="https://leetcode.com/problems/reverse-linked-list/" target="_blank" rel="external">Reverse Linked List</a></h2><p>思路：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode p = <span class="keyword">null</span>;</span><br><span class="line">        ListNode temp;</span><br><span class="line">        <span class="keyword">while</span>(head != <span class="keyword">null</span>) &#123;</span><br><span class="line">            temp = head.next;</span><br><span class="line">            head.next = p;</span><br><span class="line">            p = head;</span><br><span class="line">            head = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Reverse_Linked_List_II"><a href="https://leetcode.com/problems/reverse-linked-list-ii/" target="_blank" rel="external">Reverse Linked List II</a></h2><p>思路：</p>
<p>m的前一个节点作为头节点，使用头插法插入m~n之间的节点，最后将m的下一个节点调整为n之后的节点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseBetween</span><span class="params">(ListNode head, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        ListNode fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode start = fakeHead;</span><br><span class="line">        fakeHead.next = head;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            start = start.next;</span><br><span class="line">        &#125;</span><br><span class="line">        ListNode end = start.next;</span><br><span class="line">        ListNode p = start.next.next;</span><br><span class="line">        ListNode q = p;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - m; i++) &#123;</span><br><span class="line">            q = p;</span><br><span class="line">            p = p.next;</span><br><span class="line">            q.next = start.next;</span><br><span class="line">            start.next = q;</span><br><span class="line">        &#125;</span><br><span class="line">        end.next = p;</span><br><span class="line">        <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Linked_List_Cycle"><a href="https://leetcode.com/problems/linked-list-cycle/" target="_blank" rel="external">Linked List Cycle</a></h2><p>思路：</p>
<p>快慢指针</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123;</span><br><span class="line"> *         val = x;</span><br><span class="line"> *         next = null;</span><br><span class="line"> *     &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        ListNode slow = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            <span class="keyword">if</span> (fast == slow) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Linked_List_Cycle_II"><a href="https://leetcode.com/problems/linked-list-cycle-ii/" target="_blank" rel="external">Linked List Cycle II</a></h2><p>思路：</p>
<ol>
<li>快慢指针查找相遇点</li>
<li>慢指针回到起点，快慢指针每次移动一步</li>
<li>快慢指针再次相遇点即为链表环入口</li>
</ol>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123;</span><br><span class="line"> *         val = x;</span><br><span class="line"> *         next = null;</span><br><span class="line"> *     &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">detectCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        ListNode slow = head;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">            <span class="keyword">if</span> (fast == slow) &#123;</span><br><span class="line">                flag = <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="keyword">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        slow = head;</span><br><span class="line">        <span class="keyword">while</span> (fast != slow) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fast;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/reverse-linked-list/">Reverse Linked List</a></li>
<li><a href="https://leetcode.com/problems/reverse-linked-list-ii/">Reverse Linked List II</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle/">Linked List Cycle</a></li>
<li><a href="https://leetcode.com/problems/linked-list-cycle-ii/">Linked List Cycle II</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 3]]></title>
    <link href="http://jakezy.com/2015/07/24/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-3/"/>
    <id>http://jakezy.com/2015/07/24/Leetcode刷题记录-3/</id>
    <published>2015-07-24T07:17:25.000Z</published>
    <updated>2015-07-29T17:51:38.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="external">Remove Nth Node From End of List</a></li>
<li><a href="https://leetcode.com/problems/swap-nodes-in-pairs/" target="_blank" rel="external">Swap Nodes in Pairs</a></li>
<li><a href="https://leetcode.com/problems/rotate-list/" target="_blank" rel="external">Rotate List</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Remove_Nth_Node_From_End_of_List"><a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="external">Remove Nth Node From End of List</a></h2><p>思路：</p>
<p>快慢指针，慢指针找到倒数第n个前一个结点</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeNthFromEnd</span><span class="params">(ListNode head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        ListNode fast = head;</span><br><span class="line">        ListNode slow = head;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fast == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> head.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        slow.next = slow.next.next;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Swap_Nodes_in_Pairs"><a href="https://leetcode.com/problems/swap-nodes-in-pairs/" target="_blank" rel="external">Swap Nodes in Pairs</a></h2><p>思路：</p>
<p>交换两个节点等价于交换两个节点的val</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">swapPairs</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">        ListNode p = head;</span><br><span class="line">        <span class="keyword">while</span> (p != <span class="keyword">null</span> &amp;&amp; p.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = p.val;</span><br><span class="line">            p.val = p.next.val;</span><br><span class="line">            p.next.val = temp;</span><br><span class="line">            p = p.next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Rotate_List"><a href="https://leetcode.com/problems/rotate-list/" target="_blank" rel="external">Rotate List</a></h2><p>思路：</p>
<p>解法一：</p>
<ol>
<li>求链表长度len</li>
<li>k%len取模</li>
<li>快慢指针定位</li>
<li>交换指针</li>
</ol>
<p>解法二：<br>把整个链表连成环，找到切点再分割</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">rotateRight</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line">        </span><br><span class="line">        ListNode fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        fakeHead.next = head;</span><br><span class="line">        ListNode fast = fakeHead;</span><br><span class="line">        ListNode slow = fakeHead;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        ListNode p = head;</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="keyword">null</span>) &#123;</span><br><span class="line">            p = p.next;</span><br><span class="line">            len++;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        k = k % len;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">            fast = fast.next;</span><br><span class="line">            slow = slow.next;</span><br><span class="line">        &#125;</span><br><span class="line">        fast.next = head;</span><br><span class="line">        fakeHead.next = slow.next;</span><br><span class="line">        slow.next = <span class="keyword">null</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/remove-nth-node-from-end-of-list/">Remove Nth Node From End of List</a></li>
<li><a href="https://leetcode.com/problems/swap-nodes-in-pairs/">Swap Nodes in Pairs</a></li>
<li><a href="https://leetcode.com/problems/rotate-list/">Rotate List</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 2]]></title>
    <link href="http://jakezy.com/2015/07/22/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-2/"/>
    <id>http://jakezy.com/2015/07/22/Leetcode刷题记录-2/</id>
    <published>2015-07-22T07:48:16.000Z</published>
    <updated>2015-07-29T07:28:14.000Z</updated>
    <content type="html"><![CDATA[<ul>
<li><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="external">Longest Substring Without Repeating Characters</a></li>
<li><a href="https://leetcode.com/problems/valid-parentheses/" target="_blank" rel="external">Valid Parentheses</a></li>
<li><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="external">Merge Two Sorted Lists</a></li>
<li><a href="https://leetcode.com/problems/powx-n/" target="_blank" rel="external">Pow(x, n)</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Longest_Substring_Without_Repeating_Characters"><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/" target="_blank" rel="external">Longest Substring Without Repeating Characters</a></h2><p>思路：</p>
<p>和大部分字符统计或字符重复的思路一样，使用哈希。</p>
<p>再使用两个指针，start指向当前遍历的字串的开始位置。</p>
<p>如果遇到重复字符x，就将start的位置改为上一个x位置+1</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span>[] flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">256</span>];</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (end = <span class="number">0</span>; end &lt; s.length(); end++) &#123;</span><br><span class="line">            <span class="keyword">int</span> current = s.charAt(end);</span><br><span class="line">            <span class="keyword">while</span> (flag[current] != <span class="keyword">false</span> &amp;&amp; start &lt; end) &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = s.charAt(start);</span><br><span class="line">                flag[temp] = <span class="keyword">false</span>;</span><br><span class="line">                start++;</span><br><span class="line">            &#125;</span><br><span class="line">            flag[current] = <span class="keyword">true</span>;</span><br><span class="line">            result = Math.max(result, end - start + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Valid_Parentheses"><a href="https://leetcode.com/problems/valid-parentheses/" target="_blank" rel="external">Valid Parentheses</a></h2><p>思路：</p>
<p>当前字符为”([{“时入栈，”}])”时，判断栈顶元素是否与其配对</p>
<p>结束时判断栈是否为空</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Character, Character&gt; map = <span class="keyword">new</span> HashMap&lt;Character, Character&gt;();</span><br><span class="line">        map.put(<span class="string">'('</span>, <span class="string">')'</span>);</span><br><span class="line">        map.put(<span class="string">'['</span>, <span class="string">']'</span>);</span><br><span class="line">        map.put(<span class="string">'&#123;'</span>, <span class="string">'&#125;'</span>);</span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;Character&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">char</span> ch = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span> (map.keySet().contains(ch)) &#123;</span><br><span class="line">                stack.push(ch);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (map.values().contains(ch)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!stack.empty() &amp;&amp; map.get(stack.peek()) == ch) &#123;</span><br><span class="line">                    stack.pop();</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> stack.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Merge_Two_Sorted_Lists"><a href="https://leetcode.com/problems/merge-two-sorted-lists/" target="_blank" rel="external">Merge Two Sorted Lists</a></h2><p>思路：</p>
<p>利用伪头结点使插入第一个结点与其他结点操作一致</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * public class ListNode &#123;</span><br><span class="line"> *     int val;</span><br><span class="line"> *     ListNode next;</span><br><span class="line"> *     ListNode(int x) &#123; val = x; &#125;</span><br><span class="line"> * &#125;</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        ListNode p1 = l1;</span><br><span class="line">        ListNode p2 = l2;</span><br><span class="line">        ListNode fakeHead = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode p = fakeHead;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (p1 != <span class="keyword">null</span> &amp;&amp; p2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (p1.val &lt; p2.val) &#123;</span><br><span class="line">                p.next = p1;</span><br><span class="line">                p1 = p1.next;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                p.next = p2;</span><br><span class="line">                p2 = p2.next;</span><br><span class="line">            &#125;</span><br><span class="line">            p = p.next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (p1 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            p.next = p2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (p2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            p.next = p1;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> fakeHead.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Pow(x,_n)"><a href="https://leetcode.com/problems/powx-n/" target="_blank" rel="external">Pow(x, n)</a></h2><p>思路：</p>
<p>注意负指数</p>
<p>利用二分思想：$2^8 = 2^4 * 2^4$</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span> / pow(x, -n);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> pow(x, n);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">pow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">double</span> v = pow(x, n / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> v * v;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> v * v * x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/">Longest Substring Without Repeating Characters</a></li>
<li><a href="https://leetcode.com/problems/valid-parentheses/">Valid Parentheses</a></li>
<li><a href="https://leetcode.com/problems/merge-two-sorted-lists/">Merge Two Sorted Lists</a></li>
<li><a href="https://leetcode.com/problems/powx-n/">Pow(x, n)</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Leetcode刷题记录 1]]></title>
    <link href="http://jakezy.com/2015/07/21/Leetcode%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-1/"/>
    <id>http://jakezy.com/2015/07/21/Leetcode刷题记录-1/</id>
    <published>2015-07-21T15:36:16.000Z</published>
    <updated>2015-07-29T07:28:09.000Z</updated>
    <content type="html"><![CDATA[<p>每日三道题：</p>
<ul>
<li><a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="external">Two Sum</a></li>
<li><a href="https://leetcode.com/problems/3sum/" target="_blank" rel="external">3Sum</a></li>
<li><a href="https://leetcode.com/problems/add-two-numbers/" target="_blank" rel="external">Add Two Numbers</a></li>
</ul>
<a id="more"></a>
<p><hr></p>
<h2 id="Two_Sum"><a href="https://leetcode.com/problems/two-sum/" target="_blank" rel="external">Two Sum</a></h2><p>思路：</p>
<p>元素存入hashmap，每次循环时查找另一个元素是否在hashmap中</p>
<p>注意排除自身相加满足目标值的元素</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; hashmap = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        hashmap.put(nums[i], i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (hashmap.containsKey(target - nums[i])) &#123;</span><br><span class="line">            <span class="keyword">int</span> l = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> r = hashmap.get(target - nums[i]);</span><br><span class="line">            <span class="keyword">if</span> (l != r) &#123;</span><br><span class="line">                result[<span class="number">0</span>] = l;</span><br><span class="line">                result[<span class="number">1</span>] = r;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="3Sum"><a href="https://leetcode.com/problems/3sum/" target="_blank" rel="external">3Sum</a></h2><p>思路：</p>
<p>首先排序</p>
<p>第一个元素是外层循环递增值，第二个元素是下一个值（最小值），第三个元素是最后一个值（最大值），三者相加</p>
<p>若为0：将这三个值加入解集，最小值向后移动，最大值向前移动（注意判断元素是否重复）</p>
<p>小于0：最小值太小，最小值向后移动</p>
<p>大于0：最大值太大，最大值向前移动</p>
<p>（while循环条件类比快排的while循环条件）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreeSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; threeSum(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;List&lt;Integer&gt;&gt;();</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || nums[i] &gt; nums[i - <span class="number">1</span>]) &#123;</span><br><span class="line">                <span class="keyword">int</span> left = i + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span> right = nums.length - <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">                    <span class="keyword">int</span> sum = nums[i] + nums[left] + nums[right];</span><br><span class="line">                    <span class="keyword">if</span> (sum == <span class="number">0</span>) &#123;</span><br><span class="line">                        List&lt;Integer&gt; res = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">                        res.add(nums[i]);</span><br><span class="line">                        res.add(nums[left]);</span><br><span class="line">                        res.add(nums[right]);</span><br><span class="line">                        result.add(res);</span><br><span class="line">                        left++;</span><br><span class="line">                        right--;</span><br><span class="line">                        <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[left] == nums[left - <span class="number">1</span>]) &#123;</span><br><span class="line">                            left++;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">while</span> (left &lt; right &amp;&amp; nums[right] == nums[right + <span class="number">1</span>]) &#123;</span><br><span class="line">                            right--;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                        left++;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        right--;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><hr></p>
<h2 id="Add_Two_Numbers"><a href="https://leetcode.com/submissions/detail/33735937/" target="_blank" rel="external">Add Two Numbers</a></h2><p>思路：</p>
<p>相应位相加，注意进位</p>
<p>注意利用p1 == null ? 0 : p1.val</p>
<p>和p1 == null ? null : p1.next</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddTwoNumbers</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListNode</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        ListNode next;</span><br><span class="line"></span><br><span class="line">        ListNode(<span class="keyword">int</span> x) &#123;</span><br><span class="line">            val = x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        ListNode head = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode p = head, p1 = l1, p2 = l2;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (p1 != <span class="keyword">null</span> || p2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> a = p1 == <span class="keyword">null</span> ? <span class="number">0</span> : p1.val;</span><br><span class="line">            <span class="keyword">int</span> b = p2 == <span class="keyword">null</span> ? <span class="number">0</span> : p2.val;</span><br><span class="line">            <span class="keyword">int</span> sum = a + b + carry;</span><br><span class="line">            p.next = <span class="keyword">new</span> ListNode(sum % <span class="number">10</span>);</span><br><span class="line">            carry = sum / <span class="number">10</span>;</span><br><span class="line">            p = p.next;</span><br><span class="line">            p1 = p1 == <span class="keyword">null</span> ? <span class="keyword">null</span> : p1.next;</span><br><span class="line">            p2 = p2 == <span class="keyword">null</span> ? <span class="keyword">null</span> : p2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            p.next = <span class="keyword">new</span> ListNode(carry);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    <summary type="html">
    <![CDATA[<p>每日三道题：</p>
<ul>
<li><a href="https://leetcode.com/problems/two-sum/">Two Sum</a></li>
<li><a href="https://leetcode.com/problems/3sum/">3Sum</a></li>
<li><a href="https://leetcode.com/problems/add-two-numbers/">Add Two Numbers</a></li>
</ul>]]>
    
    </summary>
    
      <category term="Leetcode" scheme="http://jakezy.com/tags/Leetcode/"/>
    
      <category term="Leetcode" scheme="http://jakezy.com/categories/Leetcode/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[POI设置Excel单元格格式]]></title>
    <link href="http://jakezy.com/2015/07/04/POI%E8%AE%BE%E7%BD%AEExcel%E5%8D%95%E5%85%83%E6%A0%BC%E6%A0%BC%E5%BC%8F/"/>
    <id>http://jakezy.com/2015/07/04/POI设置Excel单元格格式/</id>
    <published>2015-07-04T03:40:25.000Z</published>
    <updated>2015-07-06T05:01:30.000Z</updated>
    <content type="html"><![CDATA[<p>最近用POI导出Excel时，碰到一些问题，记录下：</p>
<ul>
<li>数字格式</li>
<li>单元格宽度</li>
<li>显示#####问题</li>
</ul>
<hr>
<h2 id="数字格式">数字格式</h2><p>使用POI导出Excel时经常需要更改单元格格式，比如日期类型等等</p>
<p>问题场景：<br>java中date类型的对象直接导出到Excel显示不正确，如：”2015-07-04”显示为”42084”之类的内容</p>
<p>解决方案：<br>修改单元格格式</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cell.setCellValue(<span class="keyword">new</span> Date(<span class="number">2015</span>, <span class="number">7</span>, <span class="number">4</span>));</span><br><span class="line">CellStyle cellStyle = wb.createCellStyle();</span><br><span class="line">cellStyle.setDataFormat(HSSFDataFormat.getBuiltinFormat(<span class="string">"m/d/yy h:mm"</span>));</span><br><span class="line">cell.setCellStyle(cellStyle);</span><br></pre></td></tr></table></figure>
<p>注意其中getBuiltinFormat函数的参数，查看源码发现如下代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// class BuiltinFormats</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getBuiltinFormat</span><span class="params">(String pFmt)</span> </span>&#123;</span><br><span class="line">  String fmt;</span><br><span class="line">  <span class="keyword">if</span> (pFmt.equalsIgnoreCase(<span class="string">"TEXT"</span>)) &#123;</span><br><span class="line">      fmt = <span class="string">"@"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      fmt = pFmt;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i&lt; _formats.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span>(fmt.equals(_formats[i])) &#123;</span><br><span class="line">          <span class="keyword">return</span> i;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>其中的_formats相关代码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String[] _formats;</span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    List&lt;String&gt; m = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">    putFormat(m, <span class="number">0</span>, <span class="string">"General"</span>);</span><br><span class="line">    putFormat(m, <span class="number">1</span>, <span class="string">"0"</span>);</span><br><span class="line">    putFormat(m, <span class="number">2</span>, <span class="string">"0.00"</span>);</span><br><span class="line">    putFormat(m, <span class="number">3</span>, <span class="string">"#,##0"</span>);</span><br><span class="line">    putFormat(m, <span class="number">4</span>, <span class="string">"#,##0.00"</span>);</span><br><span class="line">    putFormat(m, <span class="number">5</span>, <span class="string">"\"$\"#,##0_);(\"$\"#,##0)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">6</span>, <span class="string">"\"$\"#,##0_);[Red](\"$\"#,##0)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">7</span>, <span class="string">"\"$\"#,##0.00_);(\"$\"#,##0.00)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">8</span>, <span class="string">"\"$\"#,##0.00_);[Red](\"$\"#,##0.00)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">9</span>, <span class="string">"0%"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xa</span>, <span class="string">"0.00%"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xb</span>, <span class="string">"0.00E+00"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xc</span>, <span class="string">"# ?/?"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xd</span>, <span class="string">"# ??/??"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xe</span>, <span class="string">"m/d/yy"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0xf</span>, <span class="string">"d-mmm-yy"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x10</span>, <span class="string">"d-mmm"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x11</span>, <span class="string">"mmm-yy"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x12</span>, <span class="string">"h:mm AM/PM"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x13</span>, <span class="string">"h:mm:ss AM/PM"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x14</span>, <span class="string">"h:mm"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x15</span>, <span class="string">"h:mm:ss"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x16</span>, <span class="string">"m/d/yy h:mm"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 0x17 - 0x24 reserved for international and undocumented</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0x17</span>; i&lt;=<span class="number">0x24</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// TODO - one junit relies on these values which seems incorrect</span></span><br><span class="line">        putFormat(m, i, <span class="string">"reserved-0x"</span> + Integer.toHexString(i));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    putFormat(m, <span class="number">0x25</span>, <span class="string">"#,##0_);(#,##0)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x26</span>, <span class="string">"#,##0_);[Red](#,##0)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x27</span>, <span class="string">"#,##0.00_);(#,##0.00)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x28</span>, <span class="string">"#,##0.00_);[Red](#,##0.00)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x29</span>, <span class="string">"_(\"$\"* #,##0_);_(\"$\"* (#,##0);_(\"$\"* \"-\"_);_(@_)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2a</span>, <span class="string">"_(* #,##0_);_(* (#,##0);_(* \"-\"_);_(@_)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2b</span>, <span class="string">"_(\"$\"* #,##0.00_);_(\"$\"* (#,##0.00);_(\"$\"* \"-\"??_);_(@_)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2c</span>, <span class="string">"_(* #,##0.00_);_(* (#,##0.00);_(* \"-\"??_);_(@_)"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2d</span>, <span class="string">"mm:ss"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2e</span>, <span class="string">"[h]:mm:ss"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x2f</span>, <span class="string">"mm:ss.0"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x30</span>, <span class="string">"##0.0E+0"</span>);</span><br><span class="line">    putFormat(m, <span class="number">0x31</span>, <span class="string">"@"</span>);</span><br><span class="line">    String[] ss = <span class="keyword">new</span> String[m.size()];</span><br><span class="line">    m.toArray(ss);</span><br><span class="line">    _formats = ss;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>_format中列出的即是Excel中定义的数字类型<br>getBuiltinFormat的参数需要根据需求匹配_format中相应的字符串来对应Excel的数字格式，<br>自定义类型的话需要调用其他方法。</p>
<hr>
<h2 id="单元格宽度">单元格宽度</h2><p>自适应宽度：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">autoSizeColumn(<span class="keyword">int</span> column);</span><br></pre></td></tr></table></figure><br>指定宽度：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setColumnWidth(<span class="keyword">int</span> columnIndex, <span class="keyword">int</span> width);</span><br></pre></td></tr></table></figure><br>其中，width是以字符的1/256为单位，代码可写为：setColumnWidth(1, 17*256);</p>
<hr>
<h2 id="显示#####问题">显示#####问题</h2><p>原因：单元格宽度不够导致无法显示格式化之后的内容<br>解决：指定单元格宽度即可（注意日期等类型设置自适应宽度时单元格宽度依旧不够，需要自己指定宽度）</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近用POI导出Excel时，碰到一些问题，记录下：</p>
<ul>
<li>数字格式</li>
<li>单元格宽度</li>
<li>显示#####问题</li>
</ul>
<hr>
<h2 id="数字格式">数字格式</h2><p>使用POI导出Excel时经常需]]>
    </summary>
    
      <category term="Excel" scheme="http://jakezy.com/tags/Excel/"/>
    
      <category term="POI" scheme="http://jakezy.com/tags/POI/"/>
    
      <category term="问题记录" scheme="http://jakezy.com/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
      <category term="工作杂记" scheme="http://jakezy.com/categories/%E5%B7%A5%E4%BD%9C%E6%9D%82%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring问题：INFO: No Spring WebApplicationInitializer types detected on classpath]]></title>
    <link href="http://jakezy.com/2015/06/09/Java-problem-record/"/>
    <id>http://jakezy.com/2015/06/09/Java-problem-record/</id>
    <published>2015-06-09T15:15:37.000Z</published>
    <updated>2015-06-09T15:25:25.000Z</updated>
    <content type="html"><![CDATA[<p>问题：我的Eclipse环境用的JDK 8，项目是JDK 7，在jetty中启动项目时报错：INFO: No Spring WebApplicationInitializer types detected<br><a id="more"></a><br>解决：确定项目编译时的jdk版本，更改Eclipse编译用的jdk版本即可</p>
<p>参考<a href="http://stackoverflow.com/questions/22938689/info-no-spring-webapplicationinitializer-types-detected-on-classpath" target="_blank" rel="external">http://stackoverflow.com/questions/22938689/info-no-spring-webapplicationinitializer-types-detected-on-classpath</a></p>
<blockquote>
<p>I found the error: I have a library that it was built using jdk 1.6. The Spring main controller and components are in this library. And how I use jdk 1.7, It does not find the classes built in 1.6.<br>The solution was built all using “compiler compliance level: 1.7” and “Generated .class files compatibility: 1.6”, “Source compatibility: 1.6”.<br>I setup this option in Eclipse: Preferences\Java\Compiler.</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<p>问题：我的Eclipse环境用的JDK 8，项目是JDK 7，在jetty中启动项目时报错：INFO: No Spring WebApplicationInitializer types detected<br>]]>
    
    </summary>
    
      <category term="java" scheme="http://jakezy.com/tags/java/"/>
    
      <category term="问题记录" scheme="http://jakezy.com/tags/%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    
      <category term="Spring" scheme="http://jakezy.com/categories/Spring/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Java面试小记]]></title>
    <link href="http://jakezy.com/2015/06/09/Java-interview-notes/"/>
    <id>http://jakezy.com/2015/06/09/Java-interview-notes/</id>
    <published>2015-06-09T15:06:36.000Z</published>
    <updated>2015-06-12T08:37:46.000Z</updated>
    <content type="html"><![CDATA[<ol>
<li>String, StringBuffer, StringBuilder使用场景，线程安全？</li>
<li>手写代码：快排</li>
<li>多线程同步 synchronized<br> 实现一个多线程下的计数操作</li>
<li>hashmap实现原理</li>
<li>是否读过Java核心源码、框架源码</li>
<li>SpringMVC的Controller是线程不安全的，Structs的Action是线程安全的</li>
<li>手写代码：二叉树层序遍历</li>
<li>手写代码：单例模式</li>
<li>Integer、int区别</li>
<li>MySQL索引原理，先建索引与先插入数据</li>
<li>POST和GET区别（request header, request body）</li>
<li>分库分表时的负载均衡：hash - 一致性哈希算法<br>可参考 <a href="http://book.douban.com/subject/25867042/" target="_blank" rel="external">大型网站系统与Java中间件实践</a> 一书中的 5.1 节内容</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<ol>
<li>String, StringBuffer, StringBuilder使用场景，线程安全？</li>
<li>手写代码：快排</li>
<li>多线程同步 synchronized<br> 实现一个多线程下的计数操作</li>
<li>hashmap实现原理</]]>
    </summary>
    
      <category term="面试" scheme="http://jakezy.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="求职路上" scheme="http://jakezy.com/categories/%E6%B1%82%E8%81%8C%E8%B7%AF%E4%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[十四周记录]]></title>
    <link href="http://jakezy.com/2015/06/01/14th-week/"/>
    <id>http://jakezy.com/2015/06/01/14th-week/</id>
    <published>2015-06-01T12:32:39.000Z</published>
    <updated>2015-06-09T15:26:29.000Z</updated>
    <content type="html"><![CDATA[<p>近期阅读<br><a id="more"></a></p>
<ul>
<li><a href="http://ericliang.info/after-the-collapse/" target="_blank" rel="external">故障之后</a></li>
<li><a href="http://blog.csdn.net/linhuanmars/article/category/2336231" target="_blank" rel="external">LeetCode总结</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MjM5NjA3MjQwMQ==&amp;mid=204381616&amp;idx=1&amp;sn=3de0860b06464452d8abafb7045b6e78" target="_blank" rel="external">闯红灯理论</a></li>
<li><a href="https://github.com/phodal/awesome-developer/blob/master/entries/different.md" target="_blank" rel="external">程序员差别的本质</a></li>
<li><a href="http://wohe.me/2015/06/02/Hexo%E5%8F%91%E5%B8%83%E6%96%87%E7%AB%A0%E6%B5%81%E7%A8%8B%E4%BC%98%E5%8C%96/" target="_blank" rel="external">Hexo发布文章流程优化</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>近期阅读<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="reading" scheme="http://jakezy.com/tags/reading/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[十一周记录]]></title>
    <link href="http://jakezy.com/2015/05/21/11th-week/"/>
    <id>http://jakezy.com/2015/05/21/11th-week/</id>
    <published>2015-05-21T10:43:54.000Z</published>
    <updated>2015-05-22T04:48:24.000Z</updated>
    <content type="html"><![CDATA[<p>本周阅读<br><a id="more"></a></p>
<ul>
<li><a href="http://lucida.me/blog/developer-reading-list/" target="_blank" rel="external">程序员必读书单</a></li>
<li><a href="http://nginx.com/blog/introduction-to-microservices/" target="_blank" rel="external">Introduction to Microservices</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA3NDM0ODQwMw==&amp;mid=208060670&amp;idx=1&amp;sn=ce67b8896985e8448137052b338093e0" target="_blank" rel="external">撰写合格的REST API</a></li>
<li><a href="http://www.amazon.cn/gp/product/B00W57FX0I/ref=ox_ya_os_product" target="_blank" rel="external">程序员必读的职业规划书</a>    <a href="http://blog.jamespan.me/2015/05/13/the-jump-guide/" target="_blank" rel="external">相关介绍</a></li>
<li>rand5生成rand7相关随机数生成方法<ul>
<li>[1] <a href="http://www.cppblog.com/hardtry/archive/2011/10/08/157556.html" target="_blank" rel="external">由rand7生成rand10以及随机数生成方法的讨论</a></li>
<li>[2] <a href="http://www.fgdsb.com/2015/01/03/implement-rand10-with-rand7/" target="_blank" rel="external">Implement rand10() with rand7()</a></li>
<li>[3] <a href="http://blog.csdn.net/doudouxiong123456/article/details/6846943" target="_blank" rel="external">随机数：关于用Rand7生成Rand10的最准确的算法（MS中的一道题）–仿真证明</a></li>
</ul>
</li>
<li><a href="http://op.baidu.com/2015/04/https-s01a01/?from=1395a" target="_blank" rel="external">大型网站的 HTTPS 实践（一）—— HTTPS 协议和原理</a></li>
<li><a href="http://cenalulu.github.io/linux/all-vim-cheatsheat/" target="_blank" rel="external">史上最全Vim快捷键键位图 – 入门到进阶</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>本周阅读<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="reading" scheme="http://jakezy.com/tags/reading/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS下FastDFS_v5.05 + nginx安装配置]]></title>
    <link href="http://jakezy.com/2015/04/20/FastDFS/"/>
    <id>http://jakezy.com/2015/04/20/FastDFS/</id>
    <published>2015-04-20T10:18:54.000Z</published>
    <updated>2015-05-22T11:25:39.000Z</updated>
    <content type="html"><![CDATA[<h2 id="安装libevent">安装libevent</h2><p>1.下载libevent：<br>wget <a href="https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz" target="_blank" rel="external">https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.tar.gz</a><br>2.解压libevent：<br>tar -zxf libevent-2.0.21-stable.tar.gz<br>3.进入解压目录：<br>cd libevent-2.0.21-stable<br>4.指定安装目录：<br>./configure<br>5.安装libevent：<br>make<br>make install</p>
<h2 id="安装libfastcommon">安装libfastcommon</h2><p>#step 1. download libfastcommon source package from github and install it,<br>   the github address:<br>   <a href="https://github.com/happyfish100/libfastcommon.git" target="_blank" rel="external">https://github.com/happyfish100/libfastcommon.git</a><br>unzip libfastcommon.zip<br>cd libfastcommon-master<br>./make.sh<br>./make.sh install</p>
<p>rm -f /usr/local/lib/libfastcommon.so<br>rm -f /usr/local/lib/libfdfsclient.so<br>rm -f /usr/lib/libfastcommon.so<br>rm -f /usr/lib/libfdfsclient.so<br>ln -s /usr/lib64/libfastcommon.so /usr/local/lib/libfastcommon.so<br>ln -s /usr/lib64/libfdfsclient.so /usr/local/lib/libfdfsclient.so<br>ln -s /usr/lib64/libfastcommon.so /usr/lib/libfastcommon.so<br>ln -s /usr/lib64/libfdfsclient.so /usr/lib/libfdfsclient.so </p>
<h2 id="安装FastDFS">安装FastDFS</h2><p>#step 2. download FastDFS source package and unpack it,<br>tar xzf FastDFS_v5.x.tar.gz<br>#for example:<br>tar xzf FastDFS_v5.04.tar.gz</p>
<p>#step 3. enter the FastDFS dir<br>cd FastDFS<br>#修改安装路径（与fdfs_trackerd/fdfs_storaged服务脚本路径保持一致）<br>vi make.sh<br>将TARGET_PREFIX=$DESTDIR/usr改成TARGET_PREFIX=$DESTDIR/usr/local</p>
<p>#step 4. execute:<br>./make.sh</p>
<p>#step 5. make install<br>./make.sh install</p>
<p>#step 6. edit/modify the config file of tracker and storage<br>fdfs_trackerd服务配置:<br>    mkdir /opt/fastdfs_tracker<br>    cd /etc/fdfs<br>    cp tracker.conf.sample tracker.conf<br>    vi tracker.conf<br>    将base_path=/home/yuqing/fastdfs改成base_path=/opt/fastdfs_tracker</p>
<p>fdfs_storaged服务配置<br>    mkdir /opt/fastdfs_storage_info<br>    mkdir /opt/fastdfs_storage_data<br>    cd /etc/fdfs<br>    cp storage.conf.sample storage.conf<br>    vi storage.conf<br>    将base_path=/home/yuqing/fastdfs改成base_path=/opt/fastdfs_storage_info<br>    将store_path0=/home/yuqing/fastdfs改成store_path0=/opt/fastdfs_storage_data<br>    将tracker_server=192.168.209.121:22122改成tracker_server=192.168.1.78:22122</p>
<p>client配置<br>    mkdir /opt/fastdfs_client<br>    cd /etc/fdfs<br>    cp client.conf.sample client.conf<br>    vi client.conf<br>    将base_path=/home/yuqing/fastdfs改成base_path=/opt/fastdfs_client<br>    将tracker_server=192.168.209.121:22122改成tracker_server=192.168.1.78:22122 </p>
<pre><code>在fastdfs_client上上传文件测试：
echo <span class="string">"this is fastdfs_client"</span> &gt; index<span class="class">.html</span>
fdfs_test /etc/fdfs/client<span class="class">.conf</span> upload aa<span class="class">.txt</span>
/usr/local/bin/fdfs_upload_file /etc/fdfs/client<span class="class">.conf</span> index<span class="class">.html</span>
group1/M00/<span class="number">00</span>/<span class="number">00</span>/wKgBM1NW5JmAO_BCAAAAFhSwOfU49<span class="class">.html</span>
这个是在storage服务器下的物理路径。
</code></pre><p>#step 7. run server programs<br>#start the tracker server:<br>    /usr/local/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart</p>
<pre><code><span class="id">#in</span> Linux, you can start fdfs_trackerd as <span class="tag">a</span> service:
/sbin/service fdfs_trackerd start
</code></pre><p>#start the storage server:<br>    /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart</p>
<pre><code><span class="id">#in</span> Linux, you can start fdfs_storaged as <span class="tag">a</span> service:
/sbin/service fdfs_storaged start
</code></pre><p>查看端口<br>lsof -i:22122<br>lsof -i:23000</p>
<p>#step 8. run test program<br>#run the client test program:<br>/usr/bin/fdfs_test <client_conf_filename> <operation><br>/usr/bin/fdfs_test1 <client_conf_filename> <operation><br>#for example, upload a file:<br>/usr/bin/fdfs_test1 <client_conf_filename> <operation><br>#for example, upload a file:<br>/usr/bin/fdfs_test conf/client.conf upload /usr/include/stdlib.h</operation></client_conf_filename></operation></client_conf_filename></operation></client_conf_filename></p>
<p>#step 9. run monitor program<br>#run the monitor program:<br>/usr/bin/fdfs_monitor <client_conf_filename></client_conf_filename></p>
<h2 id="安装nginx">安装nginx</h2><p>在安装nginx前，需要确保系统安装了g++、gcc、openssl-devel、pcre-devel和zlib-devel软件。安装必须软件：<br>yum install gcc-c++<br>yum -y install zlib zlib-devel openssl openssl-devel pcre pcre-devel </p>
<p>tar -zxv -f nginx-1.2.6.tar.gz<br>./configure –add-module=…../fastdfs-nginx-module/src<br>make<br>make install</p>
<p>配置nginx：<br>vi /usr/local/nginx/conf/nginx.conf<br>在server段中添加：<br>        location /group1/M00 {<br>            root /opt/fastdfs_storage_data/data;<br>            ngx_fastdfs_module;<br>        }</p>
<p>把FastDFS源码目录下conf子目录下面的http.conf和mime.types文件拷贝到/etc/fdfs目录下</p>
<p>cp /usr/local/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs/<br>配置etc/fdfs/mod_fastdfs.conf配置文件：<br>vi mod_fastdfs.conf<br>tracker_server=192.168.1.60:22122<br>url_have_group_name = true<br>store_path0=/mnt/fastdfs_storage_data<br>response_mode=proxy</p>
<p>#修改防火墙配置：<br>vi + /etc/sysconfig/iptables<br>#添加配置项<br>-A INPUT -m state –state NEW -m tcp -p tcp –dport 80 -j ACCEPT<br>#重启防火墙<br>service iptables restart</p>
<p>#nginx启动<br>/usr/local/nginx/sbin/nginx<br>#nginx停止<br>/usr/local/nginx/sbin/nginx -s stop<br>#nginx重启<br>/usr/local/nginx/sbin/nginx -s reload<br>#查询nginx主进程号<br>ps -ef | grep nginx</p>
<p>#测试端口<br>netstat –na|grep 80<br>#浏览器中测试<br><a href="http://ip:80" target="_blank" rel="external">http://ip:80</a></p>
<p>#查看已有的nginx编译参数：<br>nginx不像apache一样可以通过 apxs -i -a -c mod_rewrite.c 这种方式单独安装模块，需要重新编译。</p>
<p>#设置开机自动启动<br>vi /etc/rc.d/rc.local<br>将运行命令行添加进文件：<br>/usr/local/bin/fdfs_trackerd start<br>/sbin/service fdfs_storaged start<br>/usr/local/nginx/sbin/nginx</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="安装libevent">安装libevent</h2><p>1.下载libevent：<br>wget <a href="https://github.com/downloads/libevent/libevent/libevent-2.0.21-stable.t]]>
    </summary>
    
      <category term="FastDFS" scheme="http://jakezy.com/tags/FastDFS/"/>
    
      <category term="libevent" scheme="http://jakezy.com/tags/libevent/"/>
    
      <category term="nginx" scheme="http://jakezy.com/tags/nginx/"/>
    
      <category term="FastDFS" scheme="http://jakezy.com/categories/FastDFS/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第六周记录]]></title>
    <link href="http://jakezy.com/2015/04/15/6th-week/"/>
    <id>http://jakezy.com/2015/04/15/6th-week/</id>
    <published>2015-04-15T06:45:41.000Z</published>
    <updated>2015-04-15T19:07:52.000Z</updated>
    <content type="html"><![CDATA[<p><a href="http://timyang.net/misc/choose-difficulty/" target="_blank" rel="external">选择学习目标的困难与焦虑</a>这篇文章描述的正是我一直以来的状态…<br><a id="more"></a></p>
<p>这几天看<a href="http://book.douban.com/subject/24335672/" target="_blank" rel="external">淘宝技术这十年</a>，牛P列传里感受正祥老师的风格：朴素的只想把一件事情做好，把做事、做成事作为主要目标。深受感触，尽以这次实训为例，尽快改变自己当下的状态。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p><a href="http://timyang.net/misc/choose-difficulty/">选择学习目标的困难与焦虑</a>这篇文章描述的正是我一直以来的状态…<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第四周记录]]></title>
    <link href="http://jakezy.com/2015/03/31/4th-week/"/>
    <id>http://jakezy.com/2015/03/31/4th-week/</id>
    <published>2015-03-31T05:18:29.000Z</published>
    <updated>2015-03-31T05:29:21.000Z</updated>
    <content type="html"><![CDATA[<p>第四周任务（3.30-4.5）：<br><a id="more"></a></p>
<ul>
<li>根据业务确定项目实训具体架构</li>
<li>搭建环境平台</li>
<li>阿里笔试</li>
<li><a href="http://book.douban.com/subject/1230413/" target="_blank" rel="external">深入理解计算机系统</a></li>
<li>池建强 <a href="http://book.douban.com/subject/25826578/" target="_blank" rel="external">MacTalk</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>第四周任务（3.30-4.5）：<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第三周记录]]></title>
    <link href="http://jakezy.com/2015/03/22/3rd-week/"/>
    <id>http://jakezy.com/2015/03/22/3rd-week/</id>
    <published>2015-03-22T06:09:02.000Z</published>
    <updated>2015-03-31T05:32:24.000Z</updated>
    <content type="html"><![CDATA[<p>第三周任务（3.23-3.29）：<br><a id="more"></a></p>
<ul>
<li>SpringMVC</li>
<li><a href="http://book.douban.com/subject/1230413/" target="_blank" rel="external">深入理解计算机系统</a></li>
<li>阅读C++开源项目</li>
<li>池建强 <a href="http://book.douban.com/subject/25826578/" target="_blank" rel="external">MacTalk</a></li>
</ul>
<hr>
<p>第三周小结：</p>
<p>每周四的项目实训太过头疼，辞了实习工作，确实像老大说的，很多时候想的太多，做的太少……</p>
<p>花了两天时间看完了<a href="http://book.douban.com/subject/25723064/" target="_blank" rel="external">大型网站技术架构</a>，开了眼界，收获很多。主要是了解了网站架构的一般思路，对于项目实训架构也有了比较清晰的方向，非常受用。</p>
<p>接下来两天要根据云存储系统的业务确定具体架构方案，还要为周四的阿里在线笔试做准备，fighting！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第三周任务（3.23-3.29）：<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[第二周记录]]></title>
    <link href="http://jakezy.com/2015/03/15/2nd-week/"/>
    <id>http://jakezy.com/2015/03/15/2nd-week/</id>
    <published>2015-03-15T14:08:04.000Z</published>
    <updated>2015-03-31T05:32:28.000Z</updated>
    <content type="html"><![CDATA[<p>第二周任务（3.16-3.22）：<br><a id="more"></a></p>
<ul>
<li><del><a href="http://book.douban.com/subject/6709809/" target="_blank" rel="external">暗时间</a></del></li>
<li><a href="http://book.douban.com/subject/1230413/" target="_blank" rel="external">深入理解计算机系统</a></li>
<li>开始阅读一个开源项目</li>
<li><del>全面复习<a href="http://djangobook.py3k.cn/2.0/" target="_blank" rel="external">Django</a></del>，为下周入职准备</li>
<li>SpringMVC</li>
<li>继续读书笔记……</li>
</ul>
<hr>
<p>第二周小结：</p>
<p>这周满满一周的课，很累…… 但还是抽时间看完了刘未鹏的《暗时间》，很不错的一本书，关于思考，关于心理学，很多思想都很有感触，而他用语言表述了出来，这些东西也会一直影响我。</p>
<p>周六去参加了Python的一个讲座，原豆瓣技术总监清风大哥分享的内容让我对这个语言有了更全面的认识，也让我对以后的发展有了更多思考。对于我的情况，Python只能作为辅助工具，不能用来养家糊口……</p>
<p>接下来需要加强练习，抓紧有效时间来学习，找时间研究下最近很火的docker，C++方面也要抓紧时间看完一个不错的开源项目，而对于本学期的项目实训，还要尽快学会SpringMVC，fighting！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第二周任务（3.16-3.22）：<br>]]>
    
    </summary>
    
      <category term="life" scheme="http://jakezy.com/tags/life/"/>
    
      <category term="生活记录" scheme="http://jakezy.com/categories/%E7%94%9F%E6%B4%BB%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>